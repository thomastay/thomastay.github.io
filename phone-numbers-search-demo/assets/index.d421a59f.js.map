{"version":3,"file":"index.d421a59f.js","sources":["../../src/SearchBar.jsx","../../src/Select.jsx","../../src/App.jsx","../../src/genRandPhoneNum.js","../../src/index.jsx"],"sourcesContent":["import styles from \"./SearchBar.module.css\";\n\nfunction SearchBar(props) {\n  return (\n    <>\n      <label htmlFor=\"header-search\">\n        <h3>Enter a phone number</h3>\n      </label>\n      <input\n        onInput={(e) => {\n          props.setQuery(e.target.value);\n        }}\n        type=\"tel\"\n        id=\"header-search\"\n        placeholder=\"+5550703452\"\n        name=\"enterphonenumber\"\n      />\n    </>\n  );\n}\n\nexport default SearchBar;\n","import styles from \"./Select.module.css\";\n\nfunction Select(props) {\n  return (\n    <>\n      <h2>Size of dictionary</h2>\n      <div class={styles[\"select\"]}>\n        {props.choices.map((choice) => (\n          <div class={styles[\"radio-group\"]}>\n            <input\n              type=\"radio\"\n              name={props.name}\n              value={choice}\n              class={styles[\"radio-btn\"]}\n              checked={choice == props.defaultChoice}\n              onChange={(e) => props.onChange(Number(e.target.value))}\n            />\n            <label>{choice.toLocaleString()}</label>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Select;\n","import styles from \"./App.module.css\";\nimport SearchBar from \"./SearchBar\";\nimport { createSignal, createEffect, For } from \"solid-js\";\nimport { genPhoneNums } from \"./genRandPhoneNum\";\nimport Select from \"./Select\";\n\nconst MAX_ENTRIES = 100;\nconst takeArr = (arr, max) => arr.slice(0, max);\n\n// 10 mil, too big, 538ms. 16ms timing achieved with 250k numbers, which means only 128k phone numbers would be alright.\nconst DEFAULT_NUM_PHONE_NUMS = 250_000;\nconst phoneNumbersRangeChoices = [\n  10_000, 100_000, 250_000, 1000_000, 10_000_000,\n];\nphoneNumbersRangeChoices.sort((a, b) => a - b);\nconst maxPhoneNumChoice = last(phoneNumbersRangeChoices);\nconst phoneNumbersTotal = genPhoneNums(maxPhoneNumChoice);\n\nfunction App() {\n  const [entries, setEntries] = createSignal([]);\n  const [query, setQuery] = createSignal(\"\");\n  const [numPhoneNums, setNumPhoneNums] = createSignal(DEFAULT_NUM_PHONE_NUMS);\n  const [phoneNumbers, setPhoneNumbers] = createSignal([]);\n\n  // these need to be in separate createEffect if not it makes an infinite loop.\n  createEffect(() => {\n    setPhoneNumbers(phoneNumbersTotal.slice(0, numPhoneNums()));\n  });\n\n  createEffect(() => {\n    setEntries(() => {\n      let q = query();\n      if (q) {\n        q = q.trim();\n        const entries = phoneNumbers().filter((entry) => entry.includes(q));\n        return entries;\n      }\n      return [];\n    });\n  });\n  // hack\n  document.getElementById(\"loadingScreen\").style = \"display:none\";\n\n  return (\n    <div class={styles.App}>\n      <h1>Phone number search microbenchmark</h1>\n      <SearchBar setQuery={setQuery} />\n      <Select\n        choices={phoneNumbersRangeChoices}\n        defaultChoice={DEFAULT_NUM_PHONE_NUMS.toString()}\n        onChange={setNumPhoneNums}\n        name=\"phoneNumbersRangeChoices\"\n      />\n      <div class={styles.container}>\n        <p>\n          Found {entries().length} matches. Listing {MAX_ENTRIES} or less:\n        </p>\n        <ol>\n          <For each={takeArr(entries(), MAX_ENTRIES)}>\n            {(val) => <li>{val}</li>}\n          </For>\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\n\nexport default App;\n","const NINES = 1e12 - 1;\nconst TEN = 1e11;\n\nfunction genRandPhoneNumber() {\n  const result = TEN + Math.floor(Math.random() * NINES);\n  return `+${result}`;\n}\n\nexport function genPhoneNums(n) {\n  const result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(genRandPhoneNumber());\n  }\n  return result;\n}\n","import { render } from \"solid-js/web\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nrender(App, document.getElementById(\"root\"));\n"],"names":["_tmpl$","_$template","_tmpl$2","props","cloneNode","_el$2","$$input","setQuery","e","target","value","_$delegateEvents","_tmpl$3","choices","map","_el$3","_el$4","firstChild","_el$5","nextSibling","addEventListener","onChange","Number","choice","toLocaleString","_v$","styles","_v$2","name","_v$3","_v$4","defaultChoice","_p$","className","_$setAttribute","checked","phoneNumbersRangeChoices","sort","a","b","arr","phoneNumbersTotal","n","result","i","push","Math","floor","random","genPhoneNums","length","render","entries","setEntries","createSignal","query","numPhoneNums","setNumPhoneNums","phoneNumbers","setPhoneNumbers","slice","q","trim","filter","entry","includes","getElementById","style","_el$","_el$7","_el$8","_$createComponent","SearchBar","Select","toString","For","max","takeArr","children","_el$9","val","document"],"mappings":"qJAGA,MAAMA,EAASC,EAAW,oEACpBC,EAAUD,EAAW,2FAI3B,WAAmBE,SACV,CAACH,EAAOI,WAAU,GAAQ,YACzBC,EAAQH,EAAQE,WAAU,YAE1BE,cACEC,SAASC,EAAEC,OAAOC,QAGnBL,GAPwB,IAanCM,EAAiB,CAAC,oFCjBlB,MAAMX,EAASC,EAAW,+BACpBC,EAAUD,EAAW,eACrBW,EAAUX,EAAW,kDAI3B,WAAgBE,SACP,CAACH,EAAOI,WAAU,GAAQ,YACzBC,EAAQH,EAAQE,WAAU,YAEvBC,GAAO,IAAMF,EAAMU,QAAQC,QAAe,YAC3CC,EAAQH,EAAQR,WAAU,GAC1BY,EAAQD,EAAME,WACdC,EAAQF,EAAMG,qBAEdC,iBAAiB,aAAejB,EAAMkB,SAASC,OAAOd,EAAEC,OAAOC,YAE/DA,MAAQa,IAELL,GAAO,IAAMK,EAAOC,gCAGrBC,EAAMC,EACNC,EAAOxB,EAAMyB,KACbC,EAAOH,EACPI,EAAOP,GAAUpB,EAAM4B,yBAErBC,EAAIP,QAAcQ,UAAYD,EAAIP,IAAMA,OACvCO,EAAIL,MAAQO,EAAelB,EAAO,OAAQgB,EAAIL,KAAOA,OACrDK,EAAIH,SAAeI,UAAYD,EAAIH,KAAOA,OAC1CG,EAAIF,SAAeK,QAAUH,EAAIF,KAAOA,GAC1CE,IACN,CACDP,SAAK,EACLE,UAAM,EACNE,UAAM,EACNC,UAAM,IAGDf,GA7B0C,UAgC1C,IAAMV,EAAM4B,UAAYP,IAE1BrB,GArCwB,ICPnC,MAAML,EAASC,EAAW,4HACpBC,EAAUD,EAAW,aAarBmC,EAA2B,CAAC,IAAQ,IAAS,KAAS,IAAU,KACtEA,EAAyBC,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IAoF5C,IAAcC,EAlFd,MAAMC,ECdC,SAAsBC,SACrBC,EAAS,WACNC,EAAI,EAAGA,EAAIF,EAAGE,MACdC,KANF,IAJG,KAGWC,KAAKC,MAJd,aAIoBD,KAAKE,oBAS9BL,EDSiBM,EAkFZT,EAnFiBJ,GAoFlBI,EAAIU,OAAS,IEtG1BC,GFqBA,iBACSC,EAASC,GAAcC,EAAa,KACpCC,EAAOhD,GAAY+C,EAAa,KAChCE,EAAcC,GAAmBH,EATX,OAUtBI,EAAcC,GAAmBL,EAAa,cAExC,OACKb,EAAkBmB,MAAM,EAAGJ,YAEhC,QACA,SACLK,EAAIN,OAEJM,EAAG,GACDA,EAAEC,cACUJ,IAAeK,WAAgBC,EAAMC,SAASJ,WAIzD,kBAIFK,eAAe,iBAAiBC,MAAQ,eACzC,YACAC,EAAOpE,EAAOI,WAAU,GAExBW,EADQqD,EAAKnD,WACCE,YACdH,EAAQD,EAAME,WAEdoD,EADQrD,EAAMC,WACAE,cACAA,kBACdmD,EAAQtD,EAAMG,qBAEXiD,EAAMG,EAAkBC,EAAW,CAC1CjE,SAAAA,IACEQ,KAEKqD,EAAMG,EAAkBE,EAAQ,CACvC5D,QAASuB,6BA7CgB,KAgDOsC,YAGhCrD,SAAUoC,EACV7B,KAAM,6BACJb,KAEKC,GAAO,IAAMoC,IAAUF,QAAQmB,KAE/BC,EAAOC,EAAkBI,EAAK,kBA5D3B,EAACnC,EAAKoC,IAAQpC,EAAIoB,MAAM,EAAGgB,GA8D5BC,CAAQzB,IAhEH,MAmEd0B,YAAkB,YACVC,EAAQ7E,EAAQE,WAAU,YAEvB2E,EAAOC,GAETD,GALS,mBAUZtD,EAAMC,EACNC,EAAOD,aACLM,EAAIP,QAAaQ,UAAYD,EAAIP,IAAMA,OACtCO,EAAIL,SAAeM,UAAYD,EAAIL,KAAOA,GAC5CK,IACN,CACDP,SAAK,EACLE,UAAM,IAGDyC,GApDD,KE7CEa,SAASf,eAAe"}